(ns lifepad.boards)

(defn rand-board
  ([] (rand-board 0.5))
  ([chance]
     (vec (for [y (range 8)]
            (vec (for [x (range 8)]
                   (if (>= (rand) chance) :y :_)))))))

(def blank-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def glider-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :y :_ :_]
   [:_ :_ :_ :_ :y :_ :_ :_]
   [:_ :_ :_ :_ :y :y :y :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def p2-blinker-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :y :y :y :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :y :y :y :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def block-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :y :y :_ :_ :y :y :_]
   [:_ :y :y :_ :_ :y :y :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :y :y :_ :_ :y :y :_]
   [:_ :y :y :_ :_ :y :y :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def toads-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :y :y :y :_ :_ :_]
   [:_ :y :y :y :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :y :y :y :_]
   [:_ :_ :_ :y :y :y :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def grower1-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :y :_]
   [:_ :_ :_ :_ :y :_ :y :y]
   [:_ :_ :_ :_ :y :_ :y :_]
   [:_ :_ :_ :_ :y :_ :_ :_]
   [:_ :_ :y :_ :_ :_ :_ :_]
   [:y :_ :y :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def grower2-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :y :y :y :_ :y :_ :_]
   [:_ :y :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :y :y :_ :_]
   [:_ :_ :y :y :_ :y :_ :_]
   [:_ :y :_ :y :_ :y :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def x-board
  [[:y :_ :_ :_ :_ :_ :_ :y]
   [:_ :y :_ :_ :_ :_ :y :_]
   [:_ :_ :y :_ :_ :y :_ :_]
   [:_ :_ :_ :y :y :_ :_ :_]
   [:_ :_ :_ :y :y :_ :_ :_]
   [:_ :_ :y :_ :_ :y :_ :_]
   [:_ :y :_ :_ :_ :_ :y :_]
   [:y :_ :_ :_ :_ :_ :_ :y]])

(def beacon-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :y :y :_ :_ :_ :_ :_]
   [:_ :y :y :_ :_ :_ :_ :_]
   [:_ :_ :_ :y :y :_ :_ :_]
   [:_ :_ :_ :y :y :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def r-pentomino-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :y :y :_ :_ :_]
   [:_ :_ :y :y :_ :_ :_ :_]
   [:_ :_ :_ :y :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])

(def acorn-board
  [[:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :y :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :y :_ :_ :_]
   [:_ :y :y :_ :_ :y :y :y]
   [:_ :_ :_ :_ :_ :_ :_ :_]
   [:_ :_ :_ :_ :_ :_ :_ :_]])
